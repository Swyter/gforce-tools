//------------------------------------------------
//--- 010 Editor v12.0.1 Script File
//
//      File: Disney's G-Force - Filelist.bin (extractor script)
//   Authors: Swyter
//   Version: 2022.04.25
//   Purpose: Unpack files from the virtual filesystem in EngineX games of Filelist version 7.
//  Category: Game
//------------------------------------------------

/* swy: run the original template to fill out the data structures in
        the template results; we depend on this to work */
RunTemplate("gforce_filelistbin.bt");


char target_folder[] = InputDirectory("Choose a folder where to extract the EngineX-packed files");
char filelist_path[] = GetFileName();

if (target_folder[0] == 0)
    Exit(-1);

Printf("\n\n--\n[+] began extraction of filelist: %s\n" + 
               "                       at folder: %s\n\n", filelist_path, target_folder);

int i = 0, idx_act_file, idx_big_file, len, offset <format=hex>, hashcode <format=hex>;
char big_file[], opened_big_file[], target_file[];

idx_act_file = GetFileNum();

/* swy: run for every entry as displayed by our ran template */
for (i = 0; i < count; i++)
{
            len = elem[i].len,
         offset = elem[i].loc_offset;
       hashcode = elem[i].hashcode;
    target_file =  buf[i].s;

    /* swy: for some reason, some entries that end up having an asterisk in the XUtil output .txt don't get filenames */
    if (target_file[0] == 0)
        target_file = "__unk_name_hc_" + Str("%#08x_idx_%u", hashcode, i);

    Printf("[i] %3u, [%#08x] %s (%#x bytes)\n", i, hashcode, target_file, len);

    /* swy: we can't use virtual drive paths like «X:» on folder names; so pick something else */
    if (target_file[1] == ':')
        target_file[1]  = ';';

    /* swy: build the correct extension from the index; the usual pattern is Filelist.000, but anything goes */
    big_file = FileNameSetExtension(filelist_path, Str("%03u", elem[i].loc_file));

    /* swy: optimization; to avoid reopening and closing the same Filelist.NNN file for every iteration
            only pay the price when we need a change (e.g. closing .000 and opening .001) */
    if (big_file != opened_big_file)
    {
        if (idx_big_file)
        {
            FileSelect(idx_big_file);
            FileClose();
        }

        idx_big_file = FileOpen(big_file);
        opened_big_file = big_file;
    }

    /* swy: switch the active context to the Filelist.NNN file and
            export the right subset/chunk from it */
    FileSelect(idx_big_file);

    target_file = target_folder + "/" + target_file;

    /* swy: are we a GeoFile/EDB? then grab the full size, not only the first part/chunk, the Filelist entry lies */
    if (ReadUInt(offset + 0) == 0x47454f4d /* 'MOEG' */ && hashcode == ReadUInt(offset + 4) && ReadUInt(offset + 0x14) != len)
    {
        len = ReadUInt(offset + 0x14);
        Printf("[!]        \\_ (Detected EDB file with mismatched size; writing %#x bytes instead)\n\n", len);
    }

    /* swy: dump it like there's no tomorrow ¯\_(ツ)_/¯ */
    MakeDir(FileNameGetPath(target_file));
    FileSaveRange(target_file, offset, len);

    FileSelect(idx_act_file);
}

FileSelect(idx_big_file); FileClose();

Printf("\n[+] Done\n");
