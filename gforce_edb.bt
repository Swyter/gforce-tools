//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

struct spreadsheet_t
{
    uint thing <format=hex>, unk, more[3], count;
    struct
    {
        uint hashcode <format=hex>,
             offset <format=hex>, offsetb <format=hex>,
             unk <format=hex>;
        
        local uint abs_off_a <format=hex> = startof(offset ) + offset;
        local uint abs_off_b <format=hex> = startof(offsetb) + offsetb;
    
        local uint len = (abs_off_b - abs_off_a) / sizeof(wchar_t);
    
        local uint saved <format=hex> = FTell();
    
        FSeek(abs_off_a);
        wchar_t str[len];
        FSeek(saved);
    
    
    } entry[count] <optimize=false, read=Str("[%x] %s", hashcode, str)>;


    Printf("***spreadsheet--\r\n");
    local int i;
    for (i = 0; i<count; i++)
        Printf("%#x %s\r\n", entry[i].hashcode, entry[i].str);
    Printf("--\r\n");

};


FSeek( 0x4000); struct spreadsheet_t a;
FSeek(0x3f000); struct spreadsheet_t a;