//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef struct spreadsheet
{
    uint next_spreadsheet_addr <format=hex>, unk, more[3], count;
    struct
    {
        uint hashcode <format=hex>,
             offset <format=hex>, offsetb <format=hex>,
             unk <format=hex>;
        
        local uint abs_off_a <format=hex> = startof(offset ) + offset;
        local uint abs_off_b <format=hex> = startof(offsetb) + offsetb;
    
        local uint len = (abs_off_b - abs_off_a) / sizeof(wchar_t);
    
        local uint saved <format=hex> = FTell();
    
        FSeek(abs_off_a);
        wchar_t str[len];
        FSeek(saved);
    
    
    } entry[count] <optimize=false, read=Str("[%x] %s", hashcode, str)>;


    //Printf("***spreadsheet at %#x--\r\n", next_spreadsheet_addr);
    //local int i;
    //for (i = 0; i<count; i++)
    //    Printf("%#x %s\r\n", entry[i].hashcode, entry[i].str);
    //Printf("--\r\n");

} spreadsheet_t <read=Str("[%x] %u elements", unk, this.count)>;

/*
FSeek( 0x4000); struct spreadsheet_t a;
FSeek(0x3f000); struct spreadsheet_t a;
FSeek(0x45000); struct spreadsheet_t a;
FSeek(0x4E000); struct spreadsheet_t a;
FSeek(0x5B800); struct spreadsheet_t a;
FSeek(0x64000); struct spreadsheet_t a; // Chapter 5
FSeek(0x6B000); struct spreadsheet_t a; // Chapter 6
FSeek(0x6C800); struct spreadsheet_t a;
FSeek(0x6E000); struct spreadsheet_t a;
FSeek(0x6E800); struct spreadsheet_t a;
FSeek(0x75000); struct spreadsheet_t a; // Windows/PC
FSeek(0x75800); struct spreadsheet_t a; // PS2
FSeek(0x77800); struct spreadsheet_t a; // Xbox
FSeek(0x78000); struct spreadsheet_t a;
FSeek(0x79800); struct spreadsheet_t a; // Wii/Revolution
FSeek(0x7A800); struct spreadsheet_t a;
FSeek(0x7B000); struct spreadsheet_t a; // Xenon
FSeek(0x7B800); struct spreadsheet_t a; // empty
FSeek(0x7C000); struct spreadsheet_t a; // credits
FSeek(0x83000); struct spreadsheet_t a;
FSeek(0x83800); struct spreadsheet_t a;
FSeek(0xBE800); struct spreadsheet_t a;
FSeek(0xC4800); struct spreadsheet_t a;
FSeek(0xCD800); struct spreadsheet_t a;
*/


local int i; local uint s = 0x4000;
for (i = 0; i<150; i++)
{

    FSeek(s);
    Printf("FSeek(%#x); struct spreadsheet_t a;\r\n", FTell());
    struct spreadsheet_t a; s = a.next_spreadsheet_addr;
}
